// Code generated by protoc-gen-go.
// source: example.proto
// DO NOT EDIT!

/*
Package main is a generated protocol buffer package.

It is generated from these files:
	example.proto

It has these top-level messages:
	SayRequest
	Recipient
	SayReply
*/
package main

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SayRequest struct {
	SayWhat   string     `protobuf:"bytes,1,opt,name=sayWhat" json:"sayWhat,omitempty"`
	Recipient *Recipient `protobuf:"bytes,2,opt,name=recipient" json:"recipient,omitempty"`
}

func (m *SayRequest) Reset()                    { *m = SayRequest{} }
func (m *SayRequest) String() string            { return proto.CompactTextString(m) }
func (*SayRequest) ProtoMessage()               {}
func (*SayRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SayRequest) GetRecipient() *Recipient {
	if m != nil {
		return m.Recipient
	}
	return nil
}

type Recipient struct {
	Name          string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	NumberOfTimes int32  `protobuf:"varint,2,opt,name=numberOfTimes" json:"numberOfTimes,omitempty"`
}

func (m *Recipient) Reset()                    { *m = Recipient{} }
func (m *Recipient) String() string            { return proto.CompactTextString(m) }
func (*Recipient) ProtoMessage()               {}
func (*Recipient) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type SayReply struct {
	SaidWhat string `protobuf:"bytes,1,opt,name=saidWhat" json:"saidWhat,omitempty"`
}

func (m *SayReply) Reset()                    { *m = SayReply{} }
func (m *SayReply) String() string            { return proto.CompactTextString(m) }
func (*SayReply) ProtoMessage()               {}
func (*SayReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto.RegisterType((*SayRequest)(nil), "main.SayRequest")
	proto.RegisterType((*Recipient)(nil), "main.Recipient")
	proto.RegisterType((*SayReply)(nil), "main.SayReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ExampleService service

type ExampleServiceClient interface {
	SayHello(ctx context.Context, in *SayRequest, opts ...grpc.CallOption) (*SayReply, error)
}

type exampleServiceClient struct {
	cc *grpc.ClientConn
}

func NewExampleServiceClient(cc *grpc.ClientConn) ExampleServiceClient {
	return &exampleServiceClient{cc}
}

func (c *exampleServiceClient) SayHello(ctx context.Context, in *SayRequest, opts ...grpc.CallOption) (*SayReply, error) {
	out := new(SayReply)
	err := grpc.Invoke(ctx, "/main.ExampleService/SayHello", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ExampleService service

type ExampleServiceServer interface {
	SayHello(context.Context, *SayRequest) (*SayReply, error)
}

func RegisterExampleServiceServer(s *grpc.Server, srv ExampleServiceServer) {
	s.RegisterService(&_ExampleService_serviceDesc, srv)
}

func _ExampleService_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExampleServiceServer).SayHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.ExampleService/SayHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExampleServiceServer).SayHello(ctx, req.(*SayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ExampleService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "main.ExampleService",
	HandlerType: (*ExampleServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayHello",
			Handler:    _ExampleService_SayHello_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "example.proto",
}

func init() { proto.RegisterFile("example.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 215 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0x90, 0x4f, 0x4b, 0x03, 0x31,
	0x10, 0xc5, 0x5d, 0xa9, 0xda, 0x1d, 0x69, 0x95, 0x39, 0x2d, 0x3d, 0x95, 0x20, 0xd2, 0x8b, 0x39,
	0xd4, 0x2f, 0xe0, 0xa5, 0xe0, 0x4d, 0x48, 0x15, 0xcf, 0xd9, 0x75, 0xc4, 0x40, 0x92, 0x8d, 0x49,
	0x56, 0xcc, 0xb7, 0x17, 0xb3, 0xee, 0x1f, 0x6f, 0xf3, 0x7e, 0xcc, 0x3c, 0xde, 0x1b, 0x58, 0xd1,
	0xb7, 0x34, 0x4e, 0x13, 0x77, 0xbe, 0x8d, 0x2d, 0x2e, 0x8c, 0x54, 0x96, 0xbd, 0x00, 0x1c, 0x65,
	0x12, 0xf4, 0xd9, 0x51, 0x88, 0x58, 0xc1, 0x45, 0x90, 0xe9, 0xf5, 0x43, 0xc6, 0xaa, 0xd8, 0x16,
	0xbb, 0x52, 0x0c, 0x12, 0xef, 0xa0, 0xf4, 0xd4, 0x28, 0xa7, 0xc8, 0xc6, 0xea, 0x74, 0x5b, 0xec,
	0x2e, 0xf7, 0x57, 0xfc, 0xd7, 0x81, 0x8b, 0x01, 0x8b, 0x69, 0x83, 0x1d, 0xa0, 0x1c, 0x39, 0x22,
	0x2c, 0xac, 0x34, 0xf4, 0x67, 0x99, 0x67, 0xbc, 0x81, 0x95, 0xed, 0x4c, 0x4d, 0xfe, 0xe9, 0xfd,
	0x59, 0x19, 0x0a, 0xd9, 0xf3, 0x4c, 0xfc, 0x87, 0xec, 0x16, 0x96, 0x39, 0x9d, 0xd3, 0x09, 0x37,
	0xb0, 0x0c, 0x52, 0xbd, 0xcd, 0xc2, 0x8d, 0x7a, 0xff, 0x00, 0xeb, 0x43, 0x5f, 0xee, 0x48, 0xfe,
	0x4b, 0x35, 0x84, 0x3c, 0x5f, 0x3e, 0x92, 0xd6, 0x2d, 0x5e, 0xf7, 0x41, 0xa7, 0x9e, 0x9b, 0xf5,
	0x8c, 0x38, 0x9d, 0xd8, 0x49, 0x7d, 0x9e, 0x9f, 0x72, 0xff, 0x13, 0x00, 0x00, 0xff, 0xff, 0x52,
	0x01, 0x9c, 0xba, 0x25, 0x01, 0x00, 0x00,
}
